/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import '../commons/index.css';

/**
There are 5 layers to cards
layer -1:
  card back color, seen mostly in quiet cards in a grid

layer 0 or default:
  all content provided by the user

layer 1:
  avatar

layer 2:
  color covering

layer 3:
  checkbox
*/



.spectrum-Card {
  box-sizing: border-box;
  min-inline-size: var(--spectrum-card-body-header-height);;
  block-size: 100%;
  border-radius: var(--spectrum-card-border-radius);


  text-decoration: none;

  &:focus {
    outline: none;
  }

  .spectrum-Card-heading {
    margin: 0;
  }
  .spectrum-Card-checkboxWrapper {
    position: absolute;
    inset-inline-start: var(--spectrum-card-checkbox-margin);
    inset-block-start: var(--spectrum-card-checkbox-margin);
    display: grid;
    align-items: center;
    justify-items: center;
    inline-size: var(--spectrum-quickactions-height);
    block-size: var(--spectrum-quickactions-height);
    border-radius: var(--spectrum-card-quiet-border-radius);
    visibility: hidden;
  }
  .spectrum-Card-checkbox {
    /* make hitbox of checkbox same as the floating background it sits on, top and bottom are computing 0 right now though
     using calc(50% - var(--spectrum-checkbox-height) - calc(var(--spectrum-checkbox-box-size) / 2))
     */
    padding: 4px
      calc(50% - calc(var(--spectrum-checkbox-box-size) / 2))
      4px
      calc(50% - calc(var(--spectrum-checkbox-box-size) / 2));
  }

  &.is-focused,
  &.is-selected,
  &:focus,
  &:hover {
    .spectrum-Card-checkboxWrapper {
      /* Ideally, this would simply apply is-open to the QuickActions component */
      visibility: visible;
      opacity: 1;
      pointer-events: all;
    }
  }
}

.spectrum-Card-grid {
  position: relative;
}

.spectrum-Card-image {
  grid-area: preview-start / preview-start / span 2 /preview-end;
}
.spectrum-Card-illustration {
  grid-area: preview-start / preview-start / span 2 /preview-end;
}
.spectrum-Card-avatar {
  grid-area: avatar;
  z-index: 1;
}
.spectrum-Card-heading {
  grid-area: title;
}
.spectrum-Card-detail {
  grid-area: detail;
}
.spectrum-Card-actions {
  grid-area: actionmenu;
}
.spectrum-Card-content {
  grid-area: content;
}
.spectrum-Card-divider {
  grid-area: divider;
}
.spectrum-Card-footer {
  grid-area: footer;
}
.spectrum-Card-checkboxWrapper {
  z-index: 3;
}
.spectrum-Card-grid:before {
  z-index: -1;
}
.spectrum-Card-grid:after {
  z-index: 2;
}

.spectrum-Card--default {
  border: var(--spectrum-card-border-size) solid transparent;
  .spectrum-Card-grid {
    display: grid;
    grid-template-columns: var(--spectrum-card-body-padding-left) auto 1fr auto var(--spectrum-card-body-padding-right);
    grid-template-rows: auto  32px 16px minmax(30px, auto) auto auto auto var(--spectrum-card-body-padding-bottom);
    /* maybe remove avatar and absolutely position it relative to the preview? */
    grid-template-areas:
      "preview preview preview preview    preview"
      ".       avatar  .       .          ."
      ".       avatar  .       .          ."
      ".       title   detail  actionmenu ."
      ".       content content content    ."
      ".       divider divider divider    ."
      ".       footer  footer  footer     ."
      ".       .       .       .          .";

    &:before {
       content: ' ';
       grid-area: preview-start / preview-start / span 2 /preview-end;
       min-block-size: var(--spectrum-card-coverphoto-height);
       background-color: var(--spectrum-card-quiet-preview-background-color);
       border-start-start-radius: var(--spectrum-card-quiet-border-radius);
       border-start-end-radius: var(--spectrum-card-quiet-border-radius);
       transition: background-color var(--spectrum-global-animation-duration-100);
     }
  }
  .spectrum-Card-image,
  .spectrum-Card-illustration {
    block-size: var(--spectrum-card-coverphoto-height);
    inline-size: 100%;
    /*min-inline-size: var(--spectrum-card-min-width); causes to obscure border */

    align-self: center;
    justify-self: center;

    border-start-end-radius: var(--spectrum-card-border-radius);
    border-start-start-radius: var(--spectrum-card-border-radius);
    border-block-end: var(--spectrum-card-border-size) solid transparent;
  }
  .spectrum-Card-image {
  }
  .spectrum-Card-illustration {
    display: grid; /* not sure why flex doesn't work here */
    align-items: center;
    justify-items: center;
  }
  .spectrum-Card-avatar {
    inline-size: var(--spectrum-global-dimension-size-100);
    block-size: var(--spectrum-global-dimension-size-100);
  }
  .spectrum-Card-heading {
    align-self: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-inline-end: var(--spectrum-card-title-padding-right);
  }
  .spectrum-Card-detail {
    align-self: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .spectrum-Card-actions {
    align-self: center;
  }
  .spectrum-Card-content {
    margin-block-start: 5px;
    margin-block-end: 5px;
  }
  .spectrum-Card-divider {
    margin-block-start: 5px;
    margin-block-end: 5px;
  }
  .spectrum-Card-footer {
    margin-block-start: 5px;
    display: flex;
    justify-content: flex-end;
  }
}

:not(.spectrum-Card--inGrid).spectrum-Card--isQuiet {
  min-inline-size: var(--spectrum-card-quiet-min-size);

  .spectrum-Card-grid {
    block-size: 100%;
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-template-rows: auto var(--spectrum-card-quiet-body-header-margin-top) minmax(30px, auto) auto var(--spectrum-card-body-padding-bottom);
    grid-template-areas: /* can either have three rows of preview or change the spans above? */
      "preview preview preview"
      ".       .       ."
      "title   detail  actionmenu"
      "content content content"
      ".       .       .      ";

    &:after {
      content: ' ';
      grid-area: preview;
      inline-size: 100%;
      block-size: 100%;

      border-radius: var(--spectrum-card-quiet-border-radius);
    }
  }
  .spectrum-Card-image,
  .spectrum-Card-illustration {
    grid-area: preview;
    display: flex;

    align-self: center;
    justify-self: center;

    border-radius: var(--spectrum-card-quiet-border-radius);
  }
  .spectrum-Card-image {
  }
  .spectrum-Card-illustration {
    display: grid; /* not sure why flex doesn't work here */
    align-items: center;
    justify-items: center;
    inline-size: 100%;
    block-size: var(--spectrum-card-coverphoto-height);
  }
  .spectrum-Card-avatar {
    display: none;
  }
  .spectrum-Card-heading {
    align-self: center;
    margin-inline-end: var(--spectrum-card-title-padding-right);
  }
  .spectrum-Card-detail {
    align-self: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-inline-end: var(--spectrum-card-title-padding-right);
  }
  .spectrum-Card-actions {
    align-self: start;
  }
  .spectrum-Card-content {
    margin-block-start: 5px;
    margin-block-end: 5px;
  }
  .spectrum-Card-divider {
    display: none;
  }
  .spectrum-Card-footer {
    display: none;
  }
}

.spectrum-Card--inGrid.spectrum-Card--isQuiet {
  min-inline-size: var(--spectrum-card-quiet-min-size);

  .spectrum-Card-grid {
    block-size: 100%;
    display: grid;
    grid-template-columns: auto minmax(auto, 1fr) auto;
    grid-template-rows: auto var(--spectrum-card-quiet-body-header-margin-top) auto 1fr var(--spectrum-card-body-padding-bottom);
    grid-template-areas: /* can either have three rows of preview or change the spans above? */
      "preview preview preview"
        ".       .       ."
        "title   detail  actionmenu"
        "content content content"
        ".       .       .      ";

    &:before {
       content: ' ';
       grid-area: preview;

       /* aspect ration 1:1 because padding-top is calculated from width */
       inline-size: 0;
       block-size: 0;
       padding-top: 100%;
       padding-left: 100%;

       background-color: var(--spectrum-card-quiet-preview-background-color);
       border-radius: var(--spectrum-card-quiet-border-radius);
       transition: background-color var(--spectrum-global-animation-duration-100);
    }

    &:after {
      content: ' ';
      grid-area: preview;
      inline-size: 100%;
      block-size: 100%;

      border-radius: var(--spectrum-card-quiet-border-radius);
    }
  }
  .spectrum-Card-image,
  .spectrum-Card-illustration {
    clip-path: inset(0% 0% 0% 0% round 5px);
    position: absolute;
    grid-area: preview;
    block-size: 100%;
    inline-size: 100%;
    min-inline-size: 100%; /* I do not know why setting a min-width causes the image to shrink */

    align-self: center;
    justify-self: center;
  }
  .spectrum-Card-image {
    clip-path: inset(0% 0% 0% 0% round var(--spectrum-card-quiet-border-radius));
    /* remove from flow so it doesn't affect grid area size, this way the aspect ratio is maintained
     todo: figure out why or how it's already in the correct centered spot */
    position: absolute;
  }
  .spectrum-Card-illustration {
    display: grid; /* not sure why flex doesn't work here */
    align-items: center;
    justify-items: center;
  }
  .spectrum-Card-avatar {
    display: none;
  }
  .spectrum-Card-heading {
    align-self: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-inline-end: var(--spectrum-card-title-padding-right);
  }
  .spectrum-Card-detail {
    align-self: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-inline-end: var(--spectrum-card-title-padding-right);
    /* prevent from collapsing completely when there is a long title */
    min-inline-size: min-content;
  }
  .spectrum-Card-actions {
    align-self: center;
  }
  .spectrum-Card-content {
    margin-block-start: 5px;
    margin-block-end: 5px;
  }
  .spectrum-Card-divider {
    display: none;
  }
  .spectrum-Card-footer {
    display: none;
  }
}

.spectrum-Card--horizontal {
  border: var(--spectrum-card-border-size) solid transparent;
  block-size: var(--spectrum-global-dimension-size-1200);
  .spectrum-Card-checkboxWrapper {
    display: none;
  }
  &.is-focused,
  &.is-selected,
  &:focus,
  &:hover {
    .spectrum-Card-checkboxWrapper {
      display: none;
    }
  }

  .spectrum-Card-grid {
    display: grid;
    block-size: 100%;
    grid-template-columns: var(--spectrum-global-dimension-size-1200) var(--spectrum-global-dimension-size-200) 1fr auto;
    grid-template-rows: auto 1fr;
    grid-template-areas:
      "preview . title   actionmenu"
      "preview . content .";

  /* can't quite tell if the content should go under the menu */

    &:before {
      content: ' ';
      grid-area: preview;

      /* aspect ratio 1:1 is taken care of by card height and 1st column width */

      border-start-start-radius: var(--spectrum-card-quiet-border-radius);
      border-end-start-radius: var(--spectrum-card-quiet-border-radius);
      transition: background-color var(--spectrum-global-animation-duration-100);
    }
  }
  .spectrum-Card-image,
  .spectrum-Card-illustration {
    block-size: 100%;
    inline-size: 100%;

    align-self: center;
    justify-self: center;

    border-start-start-radius: var(--spectrum-card-border-radius);
    border-end-start-radius: var(--spectrum-card-border-radius);
  }

  .spectrum-Card-image {
  }

  .spectrum-Card-illustration {
  }

  .spectrum-Card-avatar {
    display: none;
  }
  .spectrum-Card-heading {
    align-self: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-inline-end: var(--spectrum-card-title-padding-right);
  }
  .spectrum-Card-detail {
    display: none;
  }
  .spectrum-Card-actions {
    align-self: center;
    margin-inline-end: var(--spectrum-global-dimension-size-150);
  }
  /* how to handle long description?? */
  .spectrum-Card-content {
    width: 100%;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    /* not working because this line is removed in css preprocessing */
    -webkit-box-orient: vertical;
    visibility: visible;
  }
  .spectrum-Card-divider {
    display: none;
  }
  .spectrum-Card-footer {
    display: none;
  }
}
